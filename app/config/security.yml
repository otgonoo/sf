# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:
    encoders:
        sf\RestBundle\Entity\User:
            algorithm: bcrypt
        Symfony\Component\Security\Core\User\User: plaintext
    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        our_db_provider:
            entity:
                class: sfRestBundle:User
                property: username
        api_provider:
            memory:
                users:
                    otgonoo:
                        password: 1234
                        roles: 'ROLE_USER'
                    admin:
                        password: 1234
                        roles: 'ROLE_ADMIN'
    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    firewalls:
        login:
            #pattern: ^/login$
            #anonymous: ~
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            form_login:
                check_path: /api/login_check
                require_previous_session: false
                username_parameter: username
                password_parameter: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            provider: our_db_provider
        api:
            pattern:   ^/api
            stateless: true
            lexik_jwt:
                authorization_header:
                    enabled: true
                    prefix:  Bearer
                query_parameter:
                    enabled: false
                    name:    bearer
        
        #login_firewall:
        #    pattern:   ^/
        #    provider: our_db_provider
        #    form_login:
        #        login_path: /login
        #        check_path: /login_check
        #    logout:
        #        path:   /logout
        #        target: /
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
            
    access_control:
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        #- { path: /api/.*, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        #- { path: ^/admin, roles: ROLE_ADMIN }
        #- { path: ^/, roles: ROLE_USER }
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }        
